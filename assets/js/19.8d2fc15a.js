(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{339:function(e,t,a){"use strict";a.r(t);var n=a(33),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"basic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#basic"}},[e._v("#")]),e._v(" basic")]),e._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[e._v("#")]),e._v(" 安装")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("composer create-project --prefer-dist laravel/laravel=5.6.* projectName\n\n// projectName 是你指定的项目名\n\n// 数据库,laravel 5.4 后为了支持emoji表情,默认使用utf8mb4, 如果mysql低于5.7.7会报错\n// 可以这样做:     https://baijunyao.com/article/137\n//找到 appProvidersAppServiceProvider.php 文件；\n//先 use Schema；\nuse Illuminate\\Support\\Facades\\Schema;\n\n// 在 boot 中添加如下代码;\npublic function boot()\n{\n    Schema::defaultStringLength(191);\n}\n\n")])])]),a("h2",{attrs:{id:"csrf攻击-跨站请求伪造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击-跨站请求伪造"}},[e._v("#")]),e._v(" CSRF攻击, 跨站请求伪造")]),e._v(" "),a("p",[e._v("定义在routes/web.php文件中的路由，默认就有了csrf验证功能。")]),e._v(" "),a("p",[e._v("但并不是所有请求都需要避免CSRF攻击，比如去第三方API获取数据的请求。")]),e._v(" "),a("p",[e._v("可以通过在VerifyCsrfToken（app/Http/Middleware/VerifyCsrfToken.php）")]),e._v(" "),a("p",[e._v("中间件中将要排除的请求URL添加到$except属性数组中。")]),e._v(" "),a("h2",{attrs:{id:"路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[e._v("#")]),e._v(" 路由")]),e._v(" "),a("h4",{attrs:{id:"基本定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本定义"}},[e._v("#")]),e._v(" 基本定义")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Route::请求方式('uri',匿名函数);\nRoute::请求方式('uri','控制器名称@操作方法');\n\n#从服务器取出资源（一项或多项） select \nRoute::get($uri, $callback);\n\n#在服务器新建一个资源 insert\nRoute::post($uri, $callback);\n\n#在服务器更新资源  update\nRoute::put/patch($uri, $callback);\n\n#从服务器删除资源 delete\nRoute::delete($uri, $callback);\n\n#4种基础路由中，只有GET请求方式不进行CSRF验证，其它请求方式则需要CSRF验证\n\n")])])]),a("h4",{attrs:{id:"路由一般需要传参-及使用命名路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由一般需要传参-及使用命名路由"}},[e._v("#")]),e._v(" 路由一般需要传参,及使用命名路由")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Route::get('URL/{参数名称?}','闭包函数或控制器响应方法标识')->where(['参数名称'=>'正则'])->name('名字');\n\n// 注意,参数需要用 {}  包裹起来\n// 加问号表示,可选, 不加就是必填\n// where 是对参数进行限制\n// name 是对路由 命名\n//  where name 根据需要使得\n\n// 生成路由, 如视图里\n$url = route('路由名字')\n")])])]),a("h4",{attrs:{id:"路由分组-前缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由分组-前缀"}},[e._v("#")]),e._v(" 路由分组 前缀")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//分组中还可以进行分组,无限制去分组下去，当然不建议无限制的分组下去,一般2到3级就可以了。\nRoute::group(['prefix' => 'admin'], function () {\n    Route::get('users', function ()    {\n        // 匹配 \"/admin/users\" URL\n    });\n});\n\n")])])]),a("h4",{attrs:{id:"查看定义好的路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看定义好的路由"}},[e._v("#")]),e._v(" 查看定义好的路由")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("> php artisan route:list\n")])])]),a("h2",{attrs:{id:"控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[e._v("#")]),e._v(" 控制器")]),e._v(" "),a("h4",{attrs:{id:"生成控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成控制器"}},[e._v("#")]),e._v(" 生成控制器")]),e._v(" "),a("p",[e._v("使用大驼峰命名，同时注意命名空间和基类控制器的引入, 控制名,可以带路径\n一般应用分前台,后台,则可以带一下 Admin  Home")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 一般控制器\n> php artisan make:controller ControllerNameController\n\n// 资源控制器\n> php artisan make:controller ControllerNameController -r [--resource]\n")])])]),a("h4",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[e._v("#")]),e._v(" 使用")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Route::请求方法(URI,'[命名空间\\]控制器类名@方法名')\n")])])]),a("h2",{attrs:{id:"请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求"}},[e._v("#")]),e._v(" 请求")]),e._v(" "),a("p",[e._v("####　Request 获取数据")]),e._v(" "),a("p",[a("strong",[e._v("以一个依赖注入的方式，帮我们实例获取对象")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("use Illuminate\\Http\\Request;\n\n// 方法里\nfunction public method (Request $request)\n{\n       // 获取指定字段, 这里的get是获得的意思,是$request提供的方法,和请求方法get post 无关系\n        $username = $request->get('username', null);\n        $password = $request->get('password', null);\n\n        //获取全部\n        $request->all();\n\n        //指定获取的字段列表,白名单\n        $request->only(['username', 'password']);\n\n        //排除不要的字段,黑名单\n        $request->except(['age']);\n\n        //判断一个字段是否存在\n        $request->has('sex');\n\n        //判断请求的类型 get  post  put delete  http请求的类型\n        $request->isMethod('post');\n\n        //$request类还可以获取cookie  和文件上传\n        //以上这些方法都有返回值,可以用个变量存起来\n\n}\n\n\n")])])]),a("p",[a("strong",[e._v("辅助函数方式获取request()")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 方法里\nfunction public method (Request $request)\n{\n   request()->all();\n   request()->isMethod('post');\n}\n")])])]),a("h2",{attrs:{id:"响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应"}},[e._v("#")]),e._v(" 响应")]),e._v(" "),a("p",[e._v("当服务器收到浏览器的请求后, 会发送响应消息给浏览器")]),e._v(" "),a("h4",{attrs:{id:"返回字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回字符串"}},[e._v("#")]),e._v(" 返回字符串")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// 在控制器或路由里  echo  或 return  一个字符串就可以了\nreturn "Hello world";\n\n')])])]),a("h4",{attrs:{id:"设置cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置cookie"}},[e._v("#")]),e._v(" 设置cookie")]),e._v(" "),a("p",[e._v("cookie 是加密的")]),e._v(" "),a("p",[e._v("response 辅助函数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// 设置\nreturn response('')->cookie('id', 111,10, '/');\n\n// cookie($name, $value, $minutes, $path, $domain, $secure, $httpOnly)\n\n//读cookie\necho request()->cookie('id');\n")])])]),a("h4",{attrs:{id:"重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[e._v("#")]),e._v(" 重定向")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("return redirect()->route('路由别名');\n")])])]),a("h4",{attrs:{id:"json-数据返回"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-数据返回"}},[e._v("#")]),e._v(" json 数据返回")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("return response()->json([\n    'name' => 'yycu',\n    'age' => 22\n])\n")])])]),a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[e._v("#")]),e._v(" 视图")]),e._v(" "),a("p",[e._v("视图的用途是用来存放应用程序中 HTML 内容，并且能够将你的控制器层与展示层分开。\n我们在控制器中使用助手函数 view() 来加载视图模板。")]),e._v(" "),a("h4",{attrs:{id:"分配数据到模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分配数据到模板"}},[e._v("#")]),e._v(" 分配数据到模板")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("view(模板文件名称, 关联数组);\nview(模板文件名称, compact('变量名1', '变量名2'));  //变量名是一个 字符串变量名, 不用 $ \nview(模板文件名称)->with(关联数组)\n\n//控制器\n \n $data = ['id'=>11, 'name'=> 'yycu'];\n\n return view('index', $data);\n return view('index', compact('data'));\n return view('index')->width(['data'=> $data]);\n\n //视图\n\n <p>{{$data['id']}}</p>\n <p>{{$data['name']}}</p>\n")])])]),a("h4",{attrs:{id:"模板中输出变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板中输出变量"}},[e._v("#")]),e._v(" 模板中输出变量")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//1 变量\n{{$变量名}}\n例\n{{$name}}\n\n\n// 2 三元运算\n{{ $name or 'Default' }} 等价于<?php echo isset( $name)?$name:'default'?>\n\n\n// 3 未转义输出\n//变量信息里边如果有html标记信息，在输出的时候html标记被转化为符号实体了，\n//而没有被浏览器解析掉，如果希望看到被浏览器解析后的内容，就需要设置两个感叹号\n// $title = \"<a href='http://www.baidu.com'>百度</a>\";\n\n{!!$变量!!}\n\n//4 原始形态输出\n//由于很多 JavaScript 框架都使用花括号来表明所提供的表达式，所以你可以使用\n// @ 符号来告知 Blade 渲染引擎你需要保留这个表达式原始形态。\n<h1>Laravel</h1>\nHello, @{{ $变量名 }}\n\n\n//5使用函数名\n\n{{phpFunctionName()}}\n\n\n//6 if语名\n\n@if (count($records) === 1)\n    我有一条记录！\n@elseif (count($records) > 1)\n    我有多条记录！\n@else\n    我没有任何记录！\n@endif\n\n\n//7 循环\n@foreach ($users as $key=>$user)\n\n    <p>此用户为 {{ $user->id }}</p>\n    # 如果传过来的就是数组那么我们就用\n    <p>{{ $user['id'] }}</p>\n\n@endforeach\n---------------------------------------\n@forelse ($users as $key=>$user)\n    <li>{{ $user->name }}</li>\n    # 如果传过来的就是数组那么我们就用\n    <p>{{ $user['id'] }}</p>\n@empty\n    <p>没有用户</p>\n@endforelse\n\n注：foreach有循环变量，$loop，$loop->index\t当前循环所迭代的索引，起始为 0。\nforeach和forelse 在确定有数据的时候，我们就用foreach\n在不确定是否有数据的时候，我们就用forelse\n\n\n//8 模板包含\n@include('public.header')\n# public 表示 views下面的public目录\n# header 表示在views/public/header.blade.php文件\n\n//9 模板定义  留坑\n<title>@yield('title')</title>\n<body>\n    @yield('content')\n    <p><p>\n</body>\n\n//9 模板继承  填坑\n@extends('laoyouts.home') #表示继承resource/views/layouts/home.blade.php布局文件\n    使用section标签替换布局模板中可变区域；\n\n@section('title', '我是title'); //用法1 \n\n@section('content')              // 用法2\n    @section  到 @endsection 之前的内容 填充\n\t给布局文件yield('content ')的区域进行填充的内容\n@endsection\n\n\n")])])]),a("h2",{attrs:{id:"表单验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表单验证"}},[e._v("#")]),e._v(" 表单验证")]),e._v(" "),a("p",[e._v("表单验证是为了防止访问者跳过客户端验证而造成的系统安全问题，\n一但非法用户绕过客户端验证而服务器端没有加以验证，这样就是很不安全了，\n所以项目必须要进行服务器端表单验证。\nLaravel 提供了多种不同的验证方法来对应用程序传入的数据进行验证。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("规则名")]),e._v(" "),a("th",[e._v("说明")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("required")]),e._v(" "),a("td",[e._v("不能为空")])]),e._v(" "),a("tr",[a("td",[e._v("max:value")]),e._v(" "),a("td",[e._v("字段值必须小于或等于value,对于字符串来说，value 为字符数")])]),e._v(" "),a("tr",[a("td",[e._v("min:value")]),e._v(" "),a("td",[e._v("字段值必须大于或等于value,对于字符串来说，value 为字符数")])]),e._v(" "),a("tr",[a("td",[e._v("email")]),e._v(" "),a("td",[e._v("验证邮箱是否合法")])]),e._v(" "),a("tr",[a("td",[e._v("url")]),e._v(" "),a("td",[e._v("验证字段必需是有效的 URL 格式")])]),e._v(" "),a("tr",[a("td",[e._v("confirmed")]),e._v(" "),a("td",[e._v("验证两个字段是否相同，如果验证的字段是password,则必须输入一个与之匹配的password_confirmation字段")])]),e._v(" "),a("tr",[a("td",[e._v("integer")]),e._v(" "),a("td",[e._v("验证字段必须是整型")])]),e._v(" "),a("tr",[a("td",[e._v("ip")]),e._v(" "),a("td",[e._v("验证字段必须是IP地址")])]),e._v(" "),a("tr",[a("td",[e._v("numeric")]),e._v(" "),a("td",[e._v("验证字段必须是数值")])]),e._v(" "),a("tr",[a("td",[e._v("size:value")]),e._v(" "),a("td",[e._v("value 验证字段必须有和给定值value想匹配的尺寸，对字符串而言，value是相应的字符数目，对数值而言，value是给定整型值；对文件而言，value是相应的文件字节数")])]),e._v(" "),a("tr",[a("td",[e._v("string")]),e._v(" "),a("td",[e._v("验证字段必须是字符串")])]),e._v(" "),a("tr",[a("td",[e._v("unique")]),e._v(" "),a("td",[e._v("表名，字段，需要排除的ID")])]),e._v(" "),a("tr",[a("td",[e._v("between:min,max")]),e._v(" "),a("td",[e._v("验证字段值的大小是否介于指定的 min 和 max 之间。字符串、数值或是文件大小的计算方式和 size 规则相同")])])])]),e._v(" "),a("h4",{attrs:{id:"添加用户验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加用户验证"}},[e._v("#")]),e._v(" 添加用户验证")]),e._v(" "),a("p",[e._v("表单验证前,要对表单的csrf验证加以处理")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// laravel写法\n\n{{ csrf_token() }} 只生成token值没有html代码          场景  ajax\n{{ csrf_field() }} 生成了token同时还生成了html代码    场景  一般的表单提交\n\n//laravel5.6之后我们对\n{{ csrf_field() }} 对它还可以简写  @csrf\n\n")])])]),a("h4",{attrs:{id:"_1-在控制器中的-this-validate-方式验证表单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-在控制器中的-this-validate-方式验证表单"}},[e._v("#")]),e._v(" 1 在控制器中的 $this->validate 方式验证表单")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" $input = $this->validate($request, [\n\n ],[\n     \n ])\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);