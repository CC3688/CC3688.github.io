(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{205:function(t,a,e){"use strict";e.r(a);var n=e(28),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),e("h2",{attrs:{id:"统一字符编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统一字符编码"}},[t._v("#")]),t._v(" 统一字符编码")]),t._v(" "),e("ul",[e("li",[t._v(">  表示 MySQL端终输入")])]),t._v(" "),e("h4",{attrs:{id:"_1-查看编码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看编码"}},[t._v("#")]),t._v(" 1 查看编码")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mysql> \\s\n")])])]),e("p",[t._v("其中 带 characterset 字段的 就是和编码有关的, 统一设置为 utf8 防止出现乱码")]),t._v(" "),e("h4",{attrs:{id:"_2-设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-设置"}},[t._v("#")]),t._v(" 2 设置")]),t._v(" "),e("p",[t._v("在配置文件配置,  在安装根目录下 创建 my.ini  并写好配置,  多少项目根据需要自己配置")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[mysql]                 // mysql 客户端 专用的配置\ndefault-character-set=utf8\n\n[mysqld]                    // 以下 针对 mysql 服务端进行配置\nport=3306\nbasedir=D:/program/phpstudy_pro/Extensions/MySQL5.7.26/\ndatadir=D:/program/phpstudy_pro/Extensions/MySQL5.7.26/data/\ncharacter-set-server=utf8\ndefault-storage-engine=MyIsam\nmax_connections=100\ncollation-server=utf8_unicode_ci\ninit_connect='SET NAMES utf8'\ninnodb_buffer_pool_size=64M\ninnodb_flush_log_at_trx_commit=1\ninnodb_lock_wait_timeout=120\ninnodb_log_buffer_size=4M\ninnodb_log_file_size=256M\ninteractive_timeout=120\njoin_buffer_size=2M\nkey_buffer_size=32M\nlog_error_verbosity=1\nmax_allowed_packet=16M\nmax_heap_table_size=64M\nmyisam_max_sort_file_size=64G\nmyisam_sort_buffer_size=32M\nread_buffer_size=512kb\nread_rnd_buffer_size=4M\nserver_id=1\nskip-external-locking=on\nsort_buffer_size=256kb\ntable_open_cache=256\nthread_cache_size=16\ntmp_table_size=64M\nwait_timeout=120\n\n[client]              // 只要是客户端都用这个配置, 如java  php  python\nport=3306\ndefault-character-set=utf8\n")])])]),e("h2",{attrs:{id:"初识-sql-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初识-sql-语句"}},[t._v("#")]),t._v(" 初识 SQL 语句")]),t._v(" "),e("p",[t._v("SQL语言分为3种类型")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("DDL语句: 数据库定义语言:　数据库, 表, 视图, 索引, 存储过程，　如：creat drop alter")])]),t._v(" "),e("li",[e("p",[t._v("DML语句: 数据库操作语言: 插入数据insert, 删除数据delete, 更新数据update, 查询数据select")])]),t._v(" "),e("li",[e("p",[t._v("DCL语句: 数据库控制语言: 例如控制用户的访问权限grant, revoke")])])]),t._v(" "),e("h4",{attrs:{id:"操作文件夹-库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作文件夹-库"}},[t._v("#")]),t._v(" 操作文件夹(库)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 增\n> create database db1 charset utf8;\n\n// 查\n> show create database db1;               // 查看单个数据库 详情\n> show databases;                          // 查看所有数据\n\n// 改\n> alter database db1 charset gbk;          \n\n// 删\n> drop database db1;\n")])])]),e("h4",{attrs:{id:"操作文件-表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作文件-表"}},[t._v("#")]),t._v(" 操作文件(表)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//切换文件夹\n>　use db1;\n\n//查看当前所在文件夹\n> select database()\n\n// 增\n> create table t1(id int, name char);\n\n// 查\n> show create table t1;\n> show tables;\n> desc t1;\n\n// 改\n> alter table t1 modify name char(6);   //改name 字段\n> alter table t1 change name NAME char(7);  // 改字段name  为NAME\n\n// 删\n> drop table t1;\n")])])]),e("h4",{attrs:{id:"操作文件内容-记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作文件内容-记录"}},[t._v("#")]),t._v(" 操作文件内容(记录)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 增\n> insert t1(id, name) values (1, 'yycu01'), (2, 'yycu02'), (3, 'yycu03');\n> insert t1 values (1, 'yycu01'), (2, 'yycu02'), (3, 'yycu03'); // 不指定字段顺序,则安字段在表中的顺序\n// 查\n> select id, name from db1.t1;\n> select id, name from t1;    //  不加库名, 默认是在当前库下的t1表\n> select * from t1;   // * 表示所有字段\n\n// 改\n> update db1.t1 set name=\"yycu\";  // 没有指定where 条件则会,全改了\n> update db1.t1 set name=\"yycu\" where id=2;\n\n// 删\n> delete from t1;  // 全删除了\n> delete from t1 where id = 1; //删除指定的\n\n")])])]),e("h2",{attrs:{id:"库操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#库操作"}},[t._v("#")]),t._v(" 库操作")]),t._v(" "),e("h4",{attrs:{id:"自带的库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自带的库"}},[t._v("#")]),t._v(" 自带的库")]),t._v(" "),e("ul",[e("li",[t._v("information_schema: 虚拟库, 不点磁盘空间, 存储的是数据库启动后的一些参数,如用户表信息,列信息,权限信息,字符信息等.")]),t._v(" "),e("li",[t._v("performance_schema: mysql5.5 开始新增的一个数据库, 主要用于收集数据库服务器性能参数,记录处理查询请求时发生的各种事件,锁等现象.")]),t._v(" "),e("li",[t._v("mysql: 授权库,主要存储系统用户的权限信息")]),t._v(" "),e("li",[t._v("test: mysql 数据库系统自动创建的测试数据库")])]),t._v(" "),e("h4",{attrs:{id:"创建数据库存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库存"}},[t._v("#")]),t._v(" 创建数据库存")]),t._v(" "),e("p",[e("strong",[t._v("查看帮助")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">help create     \n>help create database\n其中 [] 表示可有可无, 其它的必须有\n{a|b}  代表必须有, a 或 b\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//1 语法\n> create database 数据库名 charset utf8;\n\n//2 命名规则\n数字,下划线, @, #, $\n区分大小写,\n唯一\n不要用关键字\n不要单独使用数字\n最长128位\n")])])]),e("h2",{attrs:{id:"存储引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),e("p",[t._v("存储引擎就是表的类型")]),t._v(" "),e("h4",{attrs:{id:"查看mysql支持的引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看mysql支持的引擎"}},[t._v("#")]),t._v(" 查看mysql支持的引擎")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> show engines;              // 用 InnoDB  \n")])])]),e("h4",{attrs:{id:"指定表类型-存储引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定表类型-存储引擎"}},[t._v("#")]),t._v(" 指定表类型/存储引擎")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(">create table t1(id int)engine=innodb;\n> create table t3(id int) charset utf8 engine=innodb;   //指定字符 在 引擎前面\n")])])]),e("h2",{attrs:{id:"表的增删改查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#表的增删改查"}},[t._v("#")]),t._v(" 表的增删改查")]),t._v(" "),e("h4",{attrs:{id:"创建表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[t._v("#")]),t._v(" 创建表")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> create table 表名(\n    字段名1 类型[(宽度) 约束条件],\n    字段名2 类型[(宽度) 约束条件],\n    字段名3 类型[(宽度) 约束条件]\n)\n\n# 注意\n1. 同一张表中,字段不能重名\n2. 宽度和约束条件可选\n3. 字段名和类型是必须的\n")])])]),e("h4",{attrs:{id:"查看表信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看表信息"}},[t._v("#")]),t._v(" 查看表信息")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> show create table t1;   \n> show create table t1\\G;     // 一行一行显示   \n\n\n> desc  t1;\n")])])]),e("h4",{attrs:{id:"修改表结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改表结构"}},[t._v("#")]),t._v(" 修改表结构")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 1 修改表名\n> alter table 表名 rename 新表名;\n\n// 2 增加字段\n> alter table 表名 add 字段名 数据类型[完整性约束条件], add 字段名2 数据类型[完成约束条件];\n                                    //可以添加多个,也可以添加一个, 后面的字段也要带add\n\n> alter table 表名 add 字段名 数据类型[完整约束条件] first;    // 指定插入的位置\n> alter table 表名 add 字段名 数据类型[完整约束条件] after 字段名; // 插入指定字段后\n\n// 3 删除字段\n> alter table 表名 drop 字段名;\n\n// 4 修改字段\n> alter table 表名 modify 字段名 数据类型 [完整约束条件];\n> alter table 表名 change 旧字段名 新字段名 旧数据类型 [完整约束条件];\n> alter table 表名 change 旧字段名 新字段名 新数据类型 [完整约束条件];\n")])])]),e("h4",{attrs:{id:"复制表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复制表"}},[t._v("#")]),t._v(" 复制表")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> create table t1 select 字段1, 字段2 from t2;  //把t1 查出的字段复制到一张新表 t1; 表结构,记录也复制过来的\n\n> create table t1 select 字段1, 字段2 from t2 where 1> 5;//查不到记录, 只复制了表结构\n\n> create table t1 like t2; //只复制 t2的表结构\n\n\n")])])]),e("h4",{attrs:{id:"删除表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[t._v("#")]),t._v(" 删除表")]),t._v(" "),e("blockquote",[e("p",[t._v("drop table 表名;")])]),t._v(" "),e("h2",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("大小")]),t._v(" "),e("th",[t._v("范围(有符号)")]),t._v(" "),e("th",[t._v("范围(无符号)")]),t._v(" "),e("th",[t._v("用途")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("tinyint")]),t._v(" "),e("td",[t._v("1字节")]),t._v(" "),e("td",[t._v("(-128,127)")]),t._v(" "),e("td",[t._v("(0,255)")]),t._v(" "),e("td",[t._v("小整数值")])]),t._v(" "),e("tr",[e("td",[t._v("smallint")]),t._v(" "),e("td",[t._v("2字节")]),t._v(" "),e("td",[t._v("(-32 768, 32 767)")]),t._v(" "),e("td",[t._v("(0, 65 535)")]),t._v(" "),e("td",[t._v("大整数值")])]),t._v(" "),e("tr",[e("td",[t._v("mediumint")]),t._v(" "),e("td",[t._v("3字节")]),t._v(" "),e("td",[t._v("(-8 388 608, 8 388 607)")]),t._v(" "),e("td",[t._v("(0, 16 777 215)")]),t._v(" "),e("td",[t._v("大整数值")])]),t._v(" "),e("tr",[e("td",[t._v("int或integer")]),t._v(" "),e("td",[t._v("4字节")]),t._v(" "),e("td",[t._v("(-2 147 483 648, 2 147 483 647)")]),t._v(" "),e("td",[t._v("(0, 4 294 967 295)")]),t._v(" "),e("td",[t._v("大整数值")])]),t._v(" "),e("tr",[e("td",[t._v("bigint")]),t._v(" "),e("td",[t._v("8字节")]),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("极大整数值")])]),t._v(" "),e("tr",[e("td",[t._v("float")]),t._v(" "),e("td",[t._v("4字节")]),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("单精度 浮点数值")])]),t._v(" "),e("tr",[e("td",[t._v("double")]),t._v(" "),e("td",[t._v("8字节")]),t._v(" "),e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("双精度 浮点数值")])]),t._v(" "),e("tr",[e("td",[t._v("decimal")]),t._v(" "),e("td",[t._v("对decimal(m,d),"),e("br"),t._v("如果m>d为m+2,否则为d+2")]),t._v(" "),e("td",[t._v("依赖于m和d的值")]),t._v(" "),e("td",[t._v("依赖于m和d的值")]),t._v(" "),e("td",[t._v("小数值")])])])]),t._v(" "),e("h4",{attrs:{id:"整型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),e("p",[t._v("int 的存储宽度为4个bytes(8位) 即 32个bit 即 2**32")]),t._v(" "),e("p",[t._v("默认是有符号的,  无符号需要声明")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> create table t1(x tinyint unsigned);\n\n> create table t1(x int(1) unsigned zerofill); \n         //注意 ,整型类型不要(1)来限制宽度,它限制的是显示宽度, \n         //不是限制存储宽度, 存储宽度是mysql限制死了的,用不同的整型类型就是不同的存储宽度\n         //显示宽度是指 在select 查询显示 结果时, 它显示的宽度而已,如果没有设置 填充,就留空\n         //有就填充到指定的显示宽度\n         // 一般不指定显示宽度, 自动会设置到刚好显示最大的位数\n")])])]),e("h4",{attrs:{id:"浮点类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浮点类型"}},[t._v("#")]),t._v(" 浮点类型")]),t._v(" "),e("p",[t._v("floate double decimal")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# float(m, d) [unsigned] [zerofill]\n\n单精度浮点数(非准确小数值), m是数字总个数, d是小数点后个数, m最大是255, d最大值为30\n\n\n# double(m, d) [unsigned] [zerofill]\n\n双精度浮点数(非准确小数值), m是数字总个数, d是小数点后个数, m最大是255, d最大值为30\n\n\n# decimal(m, d) [unsigned] [zerofill]\n\n准确小数值, m是数字总个数, d是小数点后个数, m最大是65, d最大值为30\n\n\n它们的区别是精度不一样\n上面两个整数位大, decimal整数位小但精确\n\n通常前两个就够用了, 除你要造原子强弹,火箭, 才考虑decimal\n\n")])])]),e("h4",{attrs:{id:"日期类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期类型"}},[t._v("#")]),t._v(" 日期类型")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("create table student(\n    id int,\n    name char(6),\n    born_year year,\n    birth_date date,\n    class_time time,\n    reg_time datetime\n);\ninsert into student values (1, 'yycu', now(), now(), now(), now());\n//   1  yycu  2020  2020-06-20  17:33:35   2020-06-20 17:33:35 \n// > \\c   可以终止运行  如果有引号没配对, 则停不了, 需要先加上引号,再 \\c才终止\n")])])]),e("p",[e("strong",[t._v("datetime与timestamp的区别")]),t._v("\n大部分应用还是用 datetime")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("datetime")]),t._v(" "),e("th",[t._v("timestamp")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("日期范围")]),t._v(" "),e("td",[t._v("1001-9999年")]),t._v(" "),e("td",[t._v("1970-2038年")])]),t._v(" "),e("tr",[e("td",[t._v("时区")]),t._v(" "),e("td",[t._v("与时区无关")]),t._v(" "),e("td",[t._v("与时区有关")])]),t._v(" "),e("tr",[e("td",[t._v("存储空间")]),t._v(" "),e("td",[t._v("8字节")]),t._v(" "),e("td",[t._v("4字节")])]),t._v(" "),e("tr",[e("td",[t._v("默认值")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("不能为空,默认当前时间"),e("br"),t._v("(current_timestamp)")])])])]),t._v(" "),e("h4",{attrs:{id:"字符类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符类型"}},[t._v("#")]),t._v(" 字符类型")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("char")]),t._v(" "),e("th",[t._v("varchar")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("长度")]),t._v(" "),e("td",[t._v("定长")]),t._v(" "),e("td",[t._v("变长")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",[t._v("简单,粗暴,储存快,查询快")]),t._v(" "),e("td",[t._v("复杂,慢")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td",[t._v("浪费空间")]),t._v(" "),e("td",[t._v("节省空间")])])])]),t._v(" "),e("p",[t._v("一般使用char 类型")]),t._v(" "),e("p",[t._v("还有其它 可以存很长长度的类型")]),t._v(" "),e("p",[t._v("但数据库不应该存很长的类型, 可以想其它解决办法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 宽度指的是字符的个数  下面两个都是最多只能存5个字\ncreate table t1(name char(5));    // 不够也被全5个字符, 补空格  (定长, 一定要达到指定的长度)\n\ncreate table t1(name varchar(5));  // 不够就不够,有几个就存几个,但不超过5 (长度可以变,不超过5就行)\n\n// 末尾的空格, 存储时会存进去, 但取的时间, 会被省略掉, where = 比较时, 不管末尾的空格\n// 前面的空格不去掉的,  只去末尾\n// where like  不适用这条规则\n\n// 它们存的时\nname char(5)   定长会被空格, 每一个都是5个, 取值,直接定长5个5个的取\negon |alex |wxx  |\n\nname varchar(5) 可以变长度, 它还需要存它自己的长度\negon|alex|wxx|\n// 要在开头加一个 byte 来存它自已的长度, 长度过大, 保存长度的byte就需要也多个(最多2个)\n1bytes+egon|1bytes+alex|1bytes+wxx\n4+egon|4+alex|3+wxx\n\n\n//\n")])])]),e("h4",{attrs:{id:"枚举类型-集合类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型-集合类型"}},[t._v("#")]),t._v(" 枚举类型  集合类型")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("create table consumer(\n    id int,\n    name char(16),\n    sex enum('male', 'female', 'ohter'),\n    level enum('vip1', 'vip2', 'vip3'),\n    hobbies set('play', 'music', 'read', 'run')\n)\n\ninsert into consumer values(1, 'yycu', 'male', 'vip2', 'read');\n")])])]),e("h2",{attrs:{id:"约束条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#约束条件"}},[t._v("#")]),t._v(" 约束条件")]),t._v(" "),e("p",[t._v("创建表时对字段的约束条件")]),t._v(" "),e("h4",{attrs:{id:"not-null-与-default"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#not-null-与-default"}},[t._v("#")]),t._v(" not null 与 default")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("create table t1(\n    id int(11) unsigned zerofill, //id 被 int(11)限制,  在此 数据类型的基础之上,再被 unsigned 限制\n)\n\ncreate table t1(\n    id int,\n    name char(6), \n    sex enum('male','female') not null default 'male'\n)\n")])])]),e("p",[t._v("1.17")])])}),[],!1,null,null,null);a.default=s.exports}}]);