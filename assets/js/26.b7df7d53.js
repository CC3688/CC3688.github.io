(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{349:function(a,t,s){"use strict";s.r(t);var r=s(33),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"变量-赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量-赋值"}},[a._v("#")]),a._v(" 变量/赋值")]),a._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),s("h3",{attrs:{id:"变量声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明"}},[a._v("#")]),a._v(" 变量声明")]),a._v(" "),s("p",[a._v("var  let   const")]),a._v(" "),s("h4",{attrs:{id:"var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[a._v("#")]),a._v(" var")]),a._v(" "),s("ul",[s("li",[a._v("支持变量声明预解析")]),a._v(" "),s("li",[a._v("不支持块作用域")]),a._v(" "),s("li",[a._v("允许重复声明")])]),a._v(" "),s("h4",{attrs:{id:"let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[a._v("#")]),a._v(" let")]),a._v(" "),s("ul",[s("li",[a._v("不支持变量声明预解析（先声明后使用）")]),a._v(" "),s("li",[a._v("支持块作用域")]),a._v(" "),s("li",[a._v("不允许重复声明（暂存死区）")])]),a._v(" "),s("h4",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[a._v("#")]),a._v(" const")]),a._v(" "),s("ul",[s("li",[a._v("不支持变量声明预解析（先声明后使用）")]),a._v(" "),s("li",[a._v("支持块作用域")]),a._v(" "),s("li",[a._v("不允许重复声明（暂存死区）")]),a._v(" "),s("li",[a._v("常量（值一旦确定，不允许修改，所以必须初始化）")])]),a._v(" "),s("h4",{attrs:{id:"总之-var不要用了-尽量都用-const-当你需要变时才用-let"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总之-var不要用了-尽量都用-const-当你需要变时才用-let"}},[a._v("#")]),a._v(" 总之, var不要用了, 尽量都用 const, 当你需要变时才用 let")]),a._v(" "),s("h3",{attrs:{id:"块作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#块作用域"}},[a._v("#")]),a._v(" 块作用域")]),a._v(" "),s("p",[s("code",[a._v("由{ } 包含的代码所产生的作用域")])]),a._v(" "),s("h2",{attrs:{id:"赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值"}},[a._v("#")]),a._v(" 赋值")]),a._v(" "),s("h3",{attrs:{id:"解构赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[a._v("#")]),a._v(" 解构赋值")]),a._v(" "),s("p",[s("code",[a._v("允许按照一定模式，从数组和对象中提取值，并对变量进行赋值，这被称为解构赋值")])]),a._v(" "),s("p",[s("strong",[a._v("需要注意:")])]),a._v(" "),s("ul",[s("li",[a._v("1.左右两边必须一样；右边得是个东西(数组,对象...)")]),a._v(" "),s("li",[a._v("2.必须定义和赋值同步完成")])]),a._v(" "),s("h4",{attrs:{id:"数组解构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组解构"}},[a._v("#")]),a._v(" 数组解构")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const [a, b, c] = [1, 2, 3];  \n// 顺序对应\n// 即有了\n// const a = 1\n// const b = 2\n// const c = 3\n")])])]),s("h4",{attrs:{id:"对象解构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象解构"}},[a._v("#")]),a._v(" 对象解构")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('const {foo, bar} = {foo: "aaa", bar: "cc3688"}\n//key 值对应\n// 即有了 \n// const foo = "aaa"\n// const bar = "cc3688"\n')])])]),s("h4",{attrs:{id:"解构赋值-别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值-别名"}},[a._v("#")]),a._v(" 解构赋值-别名")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('const {foo: f, bar: b} = {foo: "aaa", bar: "cc3688"}\n//foo 原始名称\n// f 别名\n// const f = "aaa"  (不用产生 const foo  这个变显的)\n// const b = "cc3688"\n')])])]),s("h4",{attrs:{id:"多重解构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重解构"}},[a._v("#")]),a._v(" 多重解构")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('let { foo: [a, b] } = { foo: [10,20], bar: "bbb" }\n')])])])])}),[],!1,null,null,null);t.default=e.exports}}]);