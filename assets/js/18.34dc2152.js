(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{215:function(a,t,e){"use strict";e.r(t);var s=e(28),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[a._v("#")]),a._v(" 设计模式")]),a._v(" "),e("h2",{attrs:{id:"面向对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[a._v("#")]),a._v(" 面向对象")]),a._v(" "),e("h4",{attrs:{id:"搭建es6编译环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建es6编译环境"}},[a._v("#")]),a._v(" 搭建ES6编译环境")]),a._v(" "),e("p",[a._v("1 初始化 npm 环境")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm init -yes\n")])])]),e("p",[a._v("2 安装 webpack")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm i -D webpack webpack-cli\npm i -D webpack-dev-server html-webpack-plugin\n\n")])])]),e("p",[a._v("webpack.dev.config.js")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const path = require('path')\n\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n    mode: 'development',\n    entry: './src/index.js',\n    output: {\n        path: __dirname,\n        filename: './release/bundle.js'\n    },\n    module: {\n        rules: [\n            { test: /\\.js$/, exclude: /node_modules/, loader: \"babel-loader\" }\n        ]\n    },\n    plugins: [\n        new HtmlWebpackPlugin({\n            template: './index.html'\n        })\n    ],\n    devServer: {\n        contentBase: path.join(__dirname, 'release'),\n        open: true,\n        port: 9000\n    }\n}\n")])])]),e("p",[a._v("3 安装 babel")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("npm install --save-dev babel-loader @babel/core\nnpm install @babel/preset-env --save-dev\n")])])]),e("p",[a._v(".babelrc")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('{\n    "presets": ["@babel/preset-env"]\n}\n')])])]),e("h4",{attrs:{id:"什么是面向对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是面向对象"}},[a._v("#")]),a._v(" 什么是面向对象")]),a._v(" "),e("h5",{attrs:{id:"类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[a._v("#")]),a._v(" 类")]),a._v(" "),e("p",[a._v("即是模板 用来创建实例")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 类\nclass People {\n    constructor(name, age){   //构造函数\n        this.name = name     // 属性\n        this.age = age\n    }\n    eat(){                      //方法\n        alert('eat some thing')\n    }\n}\n\n// 创建实例   通过new 创建,   通过 . 运算符 设备属性  和  方法\nconst zhang = new People('zhang', 20)\nzhang.eat()\n\n\n// 继承\n// 子类继承父类\nclass Student extends People {         //通过关键字 extends 实现继承\n    constructor(name, age, number) {\n        super(name, age)           //在构造函数第一句 调用父类的构造函数 super\n        this.number = number \n    }\n}\n\n// 封装 public protected  private\n// es6 尚不支持, typescript 支持了\n")])])]),e("p",[a._v("// 多态")]),a._v(" "),e("p",[a._v("// 不像java 支持得那么好,毕竟是弱类型语言")]),a._v(" "),e("h5",{attrs:{id:"uml类图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uml类图"}},[a._v("#")]),a._v(" UML类图")]),a._v(" "),e("p",[a._v("Unified Modeling Language 统一建模语言")]),a._v(" "),e("p",[a._v("类图, UML包含很多种图, 和设计模式相关的是类图")]),a._v(" "),e("p",[a._v("关系, 主要讲解泛化和关联")]),a._v(" "),e("p",[a._v("演示, 代码和类图结合")]),a._v(" "),e("p",[e("strong",[a._v("工具")])]),a._v(" "),e("p",[e("code",[a._v("MS Office visio")])]),a._v(" "),e("p",[e("code",[a._v("https://www.processon.com")])]),a._v(" "),e("p",[e("strong",[a._v("类图")]),a._v("\n类图一般长这个类\n"),e("img",{attrs:{src:"/images/class.png",alt:""}})]),a._v(" "),e("p",[a._v("这是一个具体的类图")]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/people.jpg",alt:""}})]),a._v(" "),e("p",[e("strong",[a._v("关系")])]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/relation.jpg",alt:""}})]),a._v(" "),e("p",[a._v("类A 和 类B 继承 People")]),a._v(" "),e("p",[a._v("类People 内引用 House类")]),a._v(" "),e("h2",{attrs:{id:"设计原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[a._v("#")]),a._v(" 设计原则")]),a._v(" "),e("h4",{attrs:{id:"何为设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#何为设计"}},[a._v("#")]),a._v(" 何为设计?")]),a._v(" "),e("ul",[e("li",[a._v("即按照哪一种思路或者标准来实现功能")]),a._v(" "),e("li",[a._v("功能相同,可以有不同的设计方案来实现")]),a._v(" "),e("li",[a._v("伴随着需求增加,设计的作用才能体现出来")])]),a._v(" "),e("p",[e("strong",[a._v("unix/linux设计哲学")])]),a._v(" "),e("ul",[e("li",[e("p",[a._v("准则1: 小即是美")])]),a._v(" "),e("li",[e("p",[a._v("准则2: 让每个程序只做好一件事")])]),a._v(" "),e("li",[e("p",[a._v("准则3: 快速建立原型")])]),a._v(" "),e("li",[e("p",[a._v("准则4: 舍弃高效率而取可移植性")])]),a._v(" "),e("li",[e("p",[a._v("准则5: 采用纯文本来存储数据")])]),a._v(" "),e("li",[e("p",[a._v("准则6: 充分利用软件的杠杆效应(软件复用)")])]),a._v(" "),e("li",[e("p",[a._v("准则7: 使用shell 脚本来提高杠杆效应和可移植性")])]),a._v(" "),e("li",[e("p",[a._v("准则8: 避免强制性的用户界面")])]),a._v(" "),e("li",[e("p",[a._v("准则9: 让每个程序都称为过滤器")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 允许用户定制环境")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 尽量使操作系统内核小而轻量化")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 使用小写字母并尽量简短")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 沉默是金")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 各部分之和大于整体")])]),a._v(" "),e("li",[e("p",[a._v("小准则: 寻求90%的解决方案")])])]),a._v(" "),e("h4",{attrs:{id:"s-o-l-i-d-五大设计原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s-o-l-i-d-五大设计原则"}},[a._v("#")]),a._v(" S O L I D 五大设计原则")]),a._v(" "),e("h5",{attrs:{id:"s-单一职责原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s-单一职责原则"}},[a._v("#")]),a._v(" S 单一职责原则")]),a._v(" "),e("ul",[e("li",[a._v("一个程序只做好一件事")]),a._v(" "),e("li",[a._v("如果功能过于复杂就拆分开, 每个部分保持独立")])]),a._v(" "),e("h5",{attrs:{id:"o-开放封闭原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#o-开放封闭原则"}},[a._v("#")]),a._v(" O 开放封闭原则")]),a._v(" "),e("ul",[e("li",[a._v("对扩展开放, 对修改封闭")]),a._v(" "),e("li",[a._v("增加需求时,扩展新代码, 而非修改已有代码")]),a._v(" "),e("li",[a._v("这是软件设计的终极目标")])]),a._v(" "),e("h5",{attrs:{id:"l-李氏转换原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l-李氏转换原则"}},[a._v("#")]),a._v(" L 李氏转换原则")]),a._v(" "),e("ul",[e("li",[a._v("子类能覆盖父类")]),a._v(" "),e("li",[a._v("父类能出现的地方子类就能出现")]),a._v(" "),e("li",[a._v("JS中使用较少 (弱类型 & 继承使用较少)")])]),a._v(" "),e("h5",{attrs:{id:"i-接口独立原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i-接口独立原则"}},[a._v("#")]),a._v(" I 接口独立原则")]),a._v(" "),e("ul",[e("li",[a._v('保持接口的单一独立,避免出现"胖接口"')]),a._v(" "),e("li",[a._v("JS中没有接口(typscript有),使用较少")]),a._v(" "),e("li",[a._v("类似于单一职责原则,这里更关注接口")])]),a._v(" "),e("h5",{attrs:{id:"d-依赖倒置原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d-依赖倒置原则"}},[a._v("#")]),a._v(" D 依赖倒置原则")]),a._v(" "),e("ul",[e("li",[a._v("面向接口编程, 依赖于抽象不依赖于具体")]),a._v(" "),e("li",[a._v("使用方只关注接口而不关注具体类的实现")]),a._v(" "),e("li",[a._v("JS中使用较少(没有接品 & 弱类型)")])]),a._v(" "),e("h4",{attrs:{id:"从设计到模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从设计到模式"}},[a._v("#")]),a._v(" 从设计到模式")]),a._v(" "),e("p",[a._v("设计模式, 需要  拆分来看,是两个东西来的, 是 设计 和 模式\n需要先了解设计, 然后,才是模式")]),a._v(" "),e("h5",{attrs:{id:"_23种设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_23种设计模式"}},[a._v("#")]),a._v(" 23种设计模式")]),a._v(" "),e("ul",[e("li",[a._v("创建型")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("工厂模式(工厂方法模式,抽象工厂模式,建造者模式)\n单例模式\n原型模式\n")])])]),e("ul",[e("li",[a._v("结构型")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("适配模式    装饰器模式\n代理模式    外观模式\n\n桥接模式    组合模式\n享元模式  \n\n")])])]),e("ul",[e("li",[a._v("行为型")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n策略模式    模板方法模式   观察者模式\n迭代器模式  职责连模式      命令模式\n备忘录模式   状模式       访问者模式\n中介者模式   解释器模式\n\n")])])]),e("h2",{attrs:{id:"设计模式-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式-2"}},[a._v("#")]),a._v(" 设计模式")]),a._v(" "),e("h4",{attrs:{id:"如何学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何学习"}},[a._v("#")]),a._v(" 如何学习?")]),a._v(" "),e("ul",[e("li",[a._v("明白每个设计的道理和用意")]),a._v(" "),e("li",[a._v("通过经典应用体会它的真正使用场景")]),a._v(" "),e("li",[a._v("自己编码时多思考,尽量模仿")])]),a._v(" "),e("h4",{attrs:{id:"工厂模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工厂模式"}},[a._v("#")]),a._v(" 工厂模式")]),a._v(" "),e("p",[e("strong",[a._v("摘要")])]),a._v(" "),e("ul",[e("li",[a._v("将 new 操作单独封装")]),a._v(" "),e("li",[a._v("遇到 new 时, 就要考虑是否该使用工厂模式")])]),a._v(" "),e("p",[e("strong",[a._v("UML类图")])]),a._v(" "),e("p",[e("img",{attrs:{src:"/images/factory.jpg",alt:""}})]),a._v(" "),e("p",[e("strong",[a._v("生活场景")])]),a._v(" "),e("ul",[e("li",[a._v("去购买汉堡,直接点餐,取餐,不用自己亲手做")]),a._v(" "),e("li",[a._v('商店要 "封装" 做汉堡的工作, 做好直接给买者')])]),a._v(" "),e("p",[e("strong",[a._v("前端场景")])]),a._v(" "),e("ul",[e("li",[a._v("jQuery - $('div')")]),a._v(" "),e("li",[a._v("React.createElement")]),a._v(" "),e("li",[a._v("vue 异步组件")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("class Product {\n    constructor(name){\n        this.name = name\n    }\n\n    init(){\n        console.log('init')\n    }\n\n    fun1() {\n        console.log('fun1')\n    }\n\n    fun2() {\n        console.log('fun1')\n    }\n}\n\nclass Creator {\n    create(name) {\n        return new Product(name)\n    }\n}\n\n// 测试\nconst creator = new Creator()\n\nconst p = creator.create('p1')\n\np.init()\np.fun1()\np.fun2()\n")])])]),e("h4",{attrs:{id:"单例模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[a._v("#")]),a._v(" 单例模式")]),a._v(" "),e("p",[e("strong",[a._v("摘要")])]),a._v(" "),e("ul",[e("li",[a._v("系统中被唯一使用")]),a._v(" "),e("li",[a._v("一个类只有一个实例")])]),a._v(" "),e("h2",{attrs:{id:"综合示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#综合示例"}},[a._v("#")]),a._v(" 综合示例")])])}),[],!1,null,null,null);t.default=n.exports}}]);