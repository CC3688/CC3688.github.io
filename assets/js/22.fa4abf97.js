(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{218:function(t,a,e){"use strict";e.r(a);var n=e(28),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),e("h2",{attrs:{id:"create-react-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-react-app"}},[t._v("#")]),t._v(" create-react-app")]),t._v(" "),e("p",[t._v("可以全局安装, 也可以通过 npx 安装  (npx 下载 该包并使用该包, 确保每次都是最新版的)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("> npx create-react-app my-app       //创建了一个my-app项目\n")])])]),e("p",[t._v("创建完成后, 可以在要目录下 运行")]),t._v(" "),e("p",[e("code",[t._v("npm run start")]),t._v("  启动项目  start 命令可以省略 run")]),t._v(" "),e("h2",{attrs:{id:"文件目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件目录"}},[t._v("#")]),t._v(" 文件目录")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("|-- node_modules\n|-- public\n    |-- favico.ico      浏览器标签页的小图标\n    |-- index.html      模板\n    |-- manifest.json    \n|-- src   项目的所有源代码都在这个目录下\n    |-- App.js       组件\n    |-- index.js     整个程序的入口文件       除了这两个文件其它的可以删除了\n|-- .gitignore\n|-- package.json\n|-- yarn.lock 或 package-lock.json\n|-- README.md\n")])])]),e("h2",{attrs:{id:"react-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-组件"}},[t._v("#")]),t._v(" react 组件")]),t._v(" "),e("p",[t._v("组件就是页面的各个部分")]),t._v(" "),e("p",[t._v("如: 头部组件   搜索框组件,它又可以分为输入组件和按纽组件")]),t._v(" "),e("p",[t._v("组件显示的内容, 由组件里的 render 返回的内容决定 (函数组件,则由函数返回值决定)")]),t._v(" "),e("p",[e("strong",[t._v("jsx 组件 开头, 必须以大写字母开头")])]),t._v(" "),e("h2",{attrs:{id:"react-基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-基础"}},[t._v("#")]),t._v(" react 基础")]),t._v(" "),e("p",[t._v("一个类组件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import React, { Component } from 'react'\n// import React, { Component, Fragment } from 'react'\n// render 就可以直接 用 Fragment 不用  React.Fragment\nexport default class TodoList extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <input /><button>提交</button>\n                </div>\n                <ul>\n\n                </ul>\n            </React.Fragment>\n        )\n    }\n}\n")])])]),e("ul",[e("li",[t._v("return 返回的jsx 必须有且只有一个 根原素")]),t._v(" "),e("li",[t._v("<React.Fragment> 是一个虚拟的元素,不生成任何元素,类似于 vue的template")])])])}),[],!1,null,null,null);a.default=r.exports}}]);